{"ast":null,"code":"var _jsxFileName = \"/Users/shyamkatariya/Developer/Bookstore/src/pages/category/editCategory/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { editStyle } from \"./style\";\nimport * as Yup from \"yup\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport categoryService from \"../../../service/category.service\";\nimport { Formik } from \"formik\";\nimport ValidationErrorMessage from \"../../../components/ValidationErrorMessage/index\";\nimport { toast } from \"react-toastify\";\nimport Shared from \"../../../utils/shared\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditCategory = () => {\n  _s();\n  const classes = editStyle();\n  const navigate = useNavigate();\n  const initialValues = {\n    name: \"\"\n  };\n  const [initialValueState, setInitialValueState] = useState(initialValues);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) getCategoryById();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required(\"Category Name is required\")\n  });\n  const getCategoryById = () => {\n    categoryService.getById(Number(id)).then(res => {\n      setInitialValueState({\n        id: res.id,\n        name: res.name\n      });\n    });\n  };\n  const onSubmit = values => {\n    categoryService.save(values).then(res => {\n      toast.success(Shared.messages.UPDATED_SUCCESS);\n      navigate(\"/category\");\n    }).catch(e => toast.error(Shared.messages.UPDATED_FAIL));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.editWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        children: [id ? \"Edit\" : \"Add\", \" Category\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValueState,\n        validationSchema: validationSchema,\n        enableReinitialize: true,\n        onSubmit: onSubmit,\n        children: _ref => {\n          let {\n            values,\n            errors,\n            touched,\n            handleBlur,\n            handleChange,\n            handleSubmit\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-col\",\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"first-name\",\n                  name: \"name\",\n                  label: \"Category Name *\",\n                  variant: \"outlined\",\n                  inputProps: {\n                    className: \"small\"\n                  },\n                  value: values.name,\n                  onBlur: handleBlur,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ValidationErrorMessage, {\n                  message: errors.name,\n                  touched: touched.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"green-btn btn\",\n                variant: \"contained\",\n                type: \"submit\",\n                color: \"primary\",\n                disableElevation: true,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"pink-btn btn\",\n                variant: \"contained\",\n                type: \"button\",\n                color: \"primary\",\n                disableElevation: true,\n                onClick: () => {\n                  navigate(\"/category\");\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(EditCategory, \"7NbHS8IYsY8aUaM7NEMiCf/Cfe4=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditCategory;\nexport default EditCategory;\nvar _c;\n$RefreshReg$(_c, \"EditCategory\");","map":{"version":3,"names":["React","useEffect","useState","editStyle","Yup","Typography","TextField","Button","useNavigate","useParams","categoryService","Formik","ValidationErrorMessage","toast","Shared","EditCategory","classes","navigate","initialValues","name","initialValueState","setInitialValueState","id","getCategoryById","validationSchema","object","shape","string","required","getById","Number","then","res","onSubmit","values","save","success","messages","UPDATED_SUCCESS","catch","e","error","UPDATED_FAIL","editWrapper","errors","touched","handleBlur","handleChange","handleSubmit","className"],"sources":["/Users/shyamkatariya/Developer/Bookstore/src/pages/category/editCategory/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { editStyle } from \"./style\";\r\nimport * as Yup from \"yup\";\r\nimport { Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport categoryService from \"../../../service/category.service\";\r\nimport { Formik } from \"formik\";\r\nimport ValidationErrorMessage from \"../../../components/ValidationErrorMessage/index\";\r\nimport { toast } from \"react-toastify\";\r\nimport Shared from \"../../../utils/shared\";\r\n\r\nconst EditCategory = () => {\r\n  const classes = editStyle();\r\n  const navigate = useNavigate();\r\n  const initialValues = { name: \"\" };\r\n  const [initialValueState, setInitialValueState] = useState(initialValues);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) getCategoryById();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Category Name is required\"),\r\n  });\r\n\r\n  const getCategoryById = () => {\r\n    categoryService.getById(Number(id)).then((res) => {\r\n      setInitialValueState({\r\n        id: res.id,\r\n        name: res.name,\r\n      });\r\n    });\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    categoryService\r\n      .save(values)\r\n      .then((res) => {\r\n        toast.success(Shared.messages.UPDATED_SUCCESS);\r\n        navigate(\"/category\");\r\n      })\r\n      .catch((e) => toast.error(Shared.messages.UPDATED_FAIL));\r\n  };\r\n  return (\r\n    <div className={classes.editWrapper}>\r\n      <div className=\"container\">\r\n        <Typography variant=\"h1\">{id ? \"Edit\" : \"Add\"} Category</Typography>\r\n        <Formik\r\n          initialValues={initialValueState}\r\n          validationSchema={validationSchema}\r\n          enableReinitialize={true}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-row-wrapper\">\r\n                <div className=\"form-col\">\r\n                  <TextField\r\n                    id=\"first-name\"\r\n                    name=\"name\"\r\n                    label=\"Category Name *\"\r\n                    variant=\"outlined\"\r\n                    inputProps={{ className: \"small\" }}\r\n                    value={values.name}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <ValidationErrorMessage\r\n                    message={errors.name}\r\n                    touched={touched.name}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"btn-wrapper\">\r\n                <Button\r\n                  className=\"green-btn btn\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                >\r\n                  Save\r\n                </Button>\r\n                <Button\r\n                  className=\"pink-btn btn\"\r\n                  variant=\"contained\"\r\n                  type=\"button\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                  onClick={() => {\r\n                    navigate(\"/category\");\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCategory;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}